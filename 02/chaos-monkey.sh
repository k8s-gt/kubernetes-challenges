#!/bin/sh

######
#‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚£Ä‚£Ä‚£æ‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä
#‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚£§‚£Ä‚°Ä
#‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß
#‚†Ä‚¢Ä‚£†‚£¥‚£∂‚£¶‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚£¥‚£∂‚£¶‚£§‚°Ä
#‚¢†‚°ø‚¢â‚£§‚£§‚£§‚£ø‚£ø‚°ø‚†õ‚†õ‚†õ‚¢ø‚£ø‚£ø‚£ø‚†ü‚†õ‚†õ‚¢ø‚£ø‚£ø‚£¶‚£§‚£§‚°â‚¢ª‚°Ü
#‚£æ‚°á‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚¢à‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢∏‚£ø
#‚†∏‚£∑‚°ò‚†ª‚†ø‚†ü‚†ª‚£ø‚£ø‚£¶‚£§‚£¥‚°ø‚£ø‚£ø‚†ø‚£¶‚£§‚£§‚£æ‚£ø‚°ü‚†ª‚†ø‚†ü‚¢É‚£º‚†è
#‚†Ä‚†à‚†ª‚†∑‚£∂‚°∂‚†ø‚†õ‚†ª‚£ø‚£ø‚£ø‚†Ä‚£æ‚£ø‚†Ä‚£ø‚£ø‚£ø‚†ø‚†õ‚†ª‚¢∂‚£∂‚†∂‚†ü‚†Å
#‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß
#‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ç
#‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢§‚£à‚°â‚†ô‚†õ‚†õ‚†õ‚†õ‚†õ‚¢â‚£Å‚£§
#‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†Å
#
# Este script hace todo los cambios necesarios para "romper" tu cluster.
#
# NO deber√≠as leerlo antes de hacer el reto, de lo contrario encontrar√°s 
# las respuestas r√°pidamente.

export MINIKUBE_PROFILE="${1:-failed-cluster}"

minikube kubectl -- get pods -A
echo '
Everything was fine until now 

üî•üî•üî•
'

# Cambiando donde se hace scheduling de pods
CONTROL_PLANE=$(minikube kubectl -- get nodes --no-headers | grep control-plane | cut -d' ' -f1)
minikube kubectl -- cordon "${CONTROL_PLANE}" >/dev/null

WORKER_NODE=$(minikube kubectl -- get nodes --no-headers | grep -v control-plane | cut -d' ' -f1)
minikube kubectl -- cordon "${WORKER_NODE}" >/dev/null

# Rompiendo CoreDNS
OLD_IMAGE=$(minikube kubectl -- describe deploy -n kube-system | grep -oP 'Image:\s*\K.*')
minikube kubectl -- set image deployment.apps/coredns -n kube-system  coredns="${OLD_IMAGE}-mono-mono" >/dev/null

# Rompiendo API server
minikube ssh "sudo \
  sed -i 's%client-ca-file=/var/lib/minikube/certs/ca.crt%client-ca-file=/var/lib/minikube/certs/mono-mono-ca.crt%' \
  /etc/kubernetes/manifests/kube-apiserver.yaml"

# Rompiendo el kubeconfig
CONTROL_PLANE_IP=$(minikube ip)
minikube kubectl -- config set-cluster "${MINIKUBE_PROFILE}" --server="${CONTROL_PLANE_IP}:8446" >/dev/null

echo '
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚£Ä‚£Ä‚£æ‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚£§‚£Ä‚°Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß
‚†Ä‚†Ä‚¢Ä‚£†‚£¥‚£∂‚£¶‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚£¥‚£∂‚£¶‚£§‚°Ä
‚†Ä‚¢†‚°ø‚¢â‚£§‚£§‚£§‚£ø‚£ø‚°ø‚†õ‚†õ‚†õ‚¢ø‚£ø‚£ø‚£ø‚†ü‚†õ‚†õ‚¢ø‚£ø‚£ø‚£¶‚£§‚£§‚°â‚¢ª‚°Ü
‚†Ä‚£æ‚°á‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚¢à‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢∏‚£ø
‚†Ä‚†∏‚£∑‚°ò‚†ª‚†ø‚†ü‚†ª‚£ø‚£ø‚£¶‚£§‚£¥‚°ø‚£ø‚£ø‚†ø‚£¶‚£§‚£§‚£æ‚£ø‚°ü‚†ª‚†ø‚†ü‚¢É‚£º‚†è
‚†Ä‚†Ä‚†à‚†ª‚†∑‚£∂‚°∂‚†ø‚†õ‚†ª‚£ø‚£ø‚£ø‚†Ä‚£æ‚£ø‚†Ä‚£ø‚£ø‚£ø‚†ø‚†õ‚†ª‚¢∂‚£∂‚†∂‚†ü‚†Å
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ç
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢§‚£à‚°â‚†ô‚†õ‚†õ‚†õ‚†õ‚†õ‚¢â‚£Å‚£§
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†Å

      My J0b Iz Don3! Oock! üî•
'
